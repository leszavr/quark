 
### **"–°–æ–∑–¥–∞–π –∏ –Ω–∞—Å—Ç—Ä–æ–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å blog-service –Ω–∞ FastAPI –¥–ª—è Quark"**

```text
–¢—ã ‚Äî senior Python-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å `blog-service` –Ω–∞ **FastAPI**, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç —è–¥—Ä–æ–º –±–ª–æ–≥–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Quark.

–¶–µ–ª—å: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º ‚Äî –æ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏, —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º—É–ª—å—Ç–∏—Å–∞–π—Ç–æ–≤–æ—Å—Ç–∏, SEO –∏ AI-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.

–†–∞–±–æ—Ç–∞–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: `/var/www/quark/services/blog-service`

---

### üìÅ –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞

1. –ü–µ—Ä–µ–π–¥–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥:
   ```bash
   cd /var/www/quark/services
   mkdir blog-service && cd blog-service
   ```

2. –°–æ–∑–¥–∞–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:
   ```bash
   python3.11 -m venv venv
   source venv/bin/activate
   ```

3. –£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
   ```bash
   pip install "fastapi[all]" uvicorn sqlalchemy asyncpg python-multipart jinja2 weasyprint
   ```

---

### üóÇÔ∏è –®–∞–≥ 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
blog-service/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ main.py
‚îÇ   ‚îú‚îÄ‚îÄ routers/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blogs.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ posts.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ comments.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ai.py
‚îÇ   ‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blog.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ post.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ comment.py
‚îÇ   ‚îú‚îÄ‚îÄ schemas/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blog.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ post.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ comment.py
‚îÇ   ‚îú‚îÄ‚îÄ database.py
‚îÇ   ‚îú‚îÄ‚îÄ templates/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ post.html  (–¥–ª—è SSR)
‚îÇ   ‚îú‚îÄ‚îÄ utils/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ slugify.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ html_renderer.py
‚îÇ   ‚îú‚îÄ‚îÄ dependencies.py
‚îÇ   ‚îî‚îÄ‚îÄ ai_client.py  (–¥–ª—è —Å–≤—è–∑–∏ —Å ai-orchestrator)
‚îú‚îÄ‚îÄ static/
‚îÇ   ‚îî‚îÄ‚îÄ css/  (–±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è SSR)
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ requirements.txt
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ .env.example
‚îî‚îÄ‚îÄ README.md
```

---

### üìÑ –®–∞–≥ 3: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

#### 1. `models/blog.py`
```python
class Blog:
  id: UUID (PK)
  user_id: UUID (FK ‚Üí auth-service)
  title: str
  description: str
  subdomain: str  # alex.blog.quark.ai
  custom_domain: str  # myblog.com (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  theme: JSON  # —Ü–≤–µ—Ç–∞, —à—Ä–∏—Ñ—Ç—ã, –º–∞–∫–µ—Ç
  is_active: bool
  created_at: datetime
```

#### 2. `models/post.py`
```python
class Post:
  id: UUID (PK)
  blog_id: UUID (FK)
  title: str
  slug: str (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π, –Ω–∞ –æ—Å–Ω–æ–≤–µ title)
  content: JSONB  # –±–ª–æ–∫–∏: {type: 'paragraph', text: '...'}, {type: 'image', src: '...'}
  status: ENUM('draft', 'published', 'archived')
  published_at: datetime
  tags: List[str]
  language: str (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'en', 'ru')
  ai_generated: bool
  ai_model: str
  word_count: int
  read_time: int
```

#### 3. `models/comment.py`
```python
class Comment:
  id: UUID (PK)
  post_id: UUID (FK)
  user_id: UUID (FK)
  content: str
  parent_id: UUID (–¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏)
  created_at: datetime
```

---

### üåê –®–∞–≥ 4: –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã (routers)

#### `blogs.py`
- `GET /blogs/{username}` ‚Üí –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–≥–µ
- `GET /blogs/{username}/posts` ‚Üí —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤
- `PUT /blogs/me` ‚Üí –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–ª–æ–≥–∞ (—Ç—Ä–µ–±—É–µ—Ç JWT)

#### `posts.py`
- `GET /posts/{slug}` ‚Üí –ø–æ—Å—Ç (–ø—É–±–ª–∏—á–Ω—ã–π)
- `GET /posts` ‚Üí —Å–ø–∏—Å–æ–∫ (—Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏: tag, author, date)
- `POST /posts` ‚Üí —Å–æ–∑–¥–∞–Ω–∏–µ (—á–µ—Ä–Ω–æ–≤–∏–∫ –∏–ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è)
- `PUT /posts/{id}` ‚Üí —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- `DELETE /posts/{id}` ‚Üí —É–¥–∞–ª–µ–Ω–∏–µ
- `GET /posts/{slug}/html` ‚Üí SSR-—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ (–¥–ª—è SEO)

#### `comments.py`
- `GET /posts/{post_id}/comments`
- `POST /posts/{post_id}/comments`
- `DELETE /comments/{id}`

#### `ai.py` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
- `POST /ai/draft` ‚Üí –∑–∞–ø—Ä–æ—Å –∫ `ai-orchestrator` –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —á–µ—Ä–Ω–æ–≤–∏–∫–∞
- `POST /ai/summarize` ‚Üí –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ

---

### üé® –®–∞–≥ 5: –ë–ª–æ–∫–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (WYSIWYG)

- –ò—Å–ø–æ–ª—å–∑—É–π **JSON-—Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–ª–æ–∫–æ–≤** (–∞–Ω–∞–ª–æ–≥ Notion):
  ```json
  [
    { "type": "heading", "level": 1, "text": "–ó–∞–≥–æ–ª–æ–≤–æ–∫" },
    { "type": "paragraph", "text": "–¢–µ–∫—Å—Ç..." },
    { "type": "image", "src": "https://media.quark.ai/abc.webp", "caption": "–§–æ—Ç–æ" },
    { "type": "quote", "text": "–¶–∏—Ç–∞—Ç–∞..." }
  ]
  ```
- –í–∞–ª–∏–¥–∏—Ä—É–π —á–µ—Ä–µ–∑ Pydantic —Å Union-—Ç–∏–ø–æ–≤

---

### üåç –®–∞–≥ 6: –ú—É–ª—å—Ç–∏—Å–∞–π—Ç–æ–≤–æ—Å—Ç—å

1. –ü–æ–¥–¥–µ—Ä–∂–∫–∞:
   - `/user/alex` ‚Üí —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è –≤ `blog-service`
   - `alex.blog.quark.ai` ‚Üí DNS ‚Üí API Gateway ‚Üí blog-service
2. API Gateway –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ `Host`-–∑–∞–≥–æ–ª–æ–≤–∫—É
3. –°–µ—Ä–≤–∏—Å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç `username` –∏–∑ –ø—É—Ç–∏ –∏–ª–∏ –ø–æ–¥–¥–æ–º–µ–Ω–∞

---

### üñºÔ∏è –®–∞–≥ 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å media-service

- –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞: URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ `media-service`
- –í–∞–ª–∏–¥–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ `src` –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç `media.quark.ai`
- –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—Ä–æ–∫—Å–∏-–∑–∞–≥—Ä—É–∑–∫–∞ (–µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–µ ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–µ–∑ `media-service`)

---

### üîê –®–∞–≥ 8: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è

- –ò—Å–ø–æ–ª—å–∑—É–π JWT –∏–∑ `auth-service`
- –î–µ–∫–æ–¥–∏—Ä—É–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è `user_id`
- –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –±–ª–æ–≥–∞ –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø–æ—Å—Ç—ã

---

### üê≥ –®–∞–≥ 9: Dockerfile

```Dockerfile
FROM python:3.11-slim

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "3004"]
```

`requirements.txt`:
```txt
fastapi[all]
uvicorn
sqlalchemy[asyncio]
asyncpg
python-multipart
jinja2
weasyprint
httpx
```

---

### üîÑ –®–∞–≥ 10: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml

–î–æ–±–∞–≤—å –≤ `/var/www/quark/docker-compose.yml`:

```yaml
  blog-service:
    build: ./services/blog-service
    ports:
      - "3004:3004"
    environment:
      - DATABASE_URL=postgresql+asyncpg://quark:quarkpass@postgres:5432/quark_dev
      - MEDIA_SERVICE_URL=http://media-service:3003
      - AUTH_SERVICE_URL=http://auth-service:3001
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - media-service
      - auth-service
    restart: unless-stopped
```

---

### üß™ –®–∞–≥ 11: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

1. –ó–∞–ø—É—Å—Ç–∏:
   ```bash
   uvicorn src.main:app --reload
   ```

2. –ü—Ä–æ–≤–µ—Ä—å:
   - –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–≥–∞
   - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏–∑ `media-service`
   - –ü—É–±–ª–∏–∫–∞—Ü–∏—è ‚Üí –¥–æ—Å—Ç—É–ø –ø–æ `/posts/my-first-post`
   - SSR-—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥: `/posts/my-first-post/html`
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–≥–æ–≤ –∏ –ø–æ–∏—Å–∫–∞

---

### ‚úÖ –®–∞–≥ 12: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

–°–æ–∑–¥–∞–π `README.md`:

```markdown
# Blog Service

–Ø–¥—Ä–æ –±–ª–æ–≥–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Quark.

## –§—É–Ω–∫—Ü–∏–∏
- –ú—É–ª—å—Ç–∏—Å–∞–π—Ç–æ–≤—ã–µ –±–ª–æ–≥–∏
- –ë–ª–æ–∫–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (WYSIWYG)
- –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è
- SEO —á–µ—Ä–µ–∑ SSR
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å media-service –∏ ai-orchestrator

## API
Swagger: `/docs`

## –ú—É–ª—å—Ç–∏—Å–∞–π—Ç–æ–≤–æ—Å—Ç—å
–ü–æ–¥–¥–µ—Ä–∂–∫–∞:
- /user/alex
- alex.blog.quark.ai
- myblog.com (custom domain)
```

---

### üìÑ –í—ã–≤–æ–¥

–ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏:
1. –í—ã–≤–µ–¥–∏ –æ—Ç—á–µ—Ç: —á—Ç–æ —Å–æ–∑–¥–∞–Ω–æ, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏.
2. –ü—Ä–µ–¥–ª–æ–∂–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ `ai-orchestrator` –∏–ª–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å `search-service`.

–¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ.  
–ì–æ—Ç–æ–≤? –ü—Ä–∏—Å—Ç—É–ø–∞–π.
```

