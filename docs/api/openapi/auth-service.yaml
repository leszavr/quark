openapi: 3.0.0
info:
  title: Auth Service API
  version: v1
  description: Служба аутентификации и управления сессиями

servers:
  - url: http://localhost:3001
    description: Development Server
  - url: https://api.quark.com
    description: Production

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@quark.ai
        password:
          type: string
          format: password
          example: mysecretpassword

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        token_type:
          type: string
          example: bearer
        expires_in:
          type: integer
          example: 900

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        username:
          type: string
          minLength: 3
          maxLength: 30
          pattern: '^[a-zA-Z0-9_-]+$'
          example: alex_dev

    RegisterResponse:
      type: object
      properties:
        user_id:
          type: string
          example: user-123abc
        username:
          type: string
        email:
          type: string

    ValidateTokenResponse:
      type: object
      properties:
        valid:
          type: boolean
        user_id:
          type: string
        roles:
          type: array
          items:
            type: string
        exp:
          type: integer

security:
  - BearerAuth: []

paths:
  /auth/login:
    post:
      summary: Вход пользователя
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Неверные учетные данные

  /auth/register:
    post:
      summary: Регистрация нового пользователя
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Неверный формат данных
        '409':
          description: Пользователь с таким email или username уже существует

  /auth/validate:
    get:
      summary: Проверка JWT токена
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Токен валиден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateTokenResponse'
        '401':
          description: Токен недействителен или истёк