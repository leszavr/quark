
```text
–¢—ã ‚Äî senior AI/ML –∏–Ω–∂–µ–Ω–µ—Ä –∏ full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å `ai-orchestrator` –Ω–∞ **FastAPI + LangChain + Ollama**, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ò–ò-–∞–≥–µ–Ω—Ç–∞–º–∏ –≤ —Å–∏—Å—Ç–µ–º–µ Quark.

–¶–µ–ª—å:  
1. –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç (–ø–æ—Å—Ç—ã, –∑–∞–≥–æ–ª–æ–≤–∫–∏, –æ–ø–∏—Å–∞–Ω–∏—è)  
2. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ä–µ–∂–∏–º "—á–µ–ª–æ–≤–µ–∫ –≤ —Ü–∏–∫–ª–µ" ‚Äî –ò–ò –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç, —á–µ–ª–æ–≤–µ–∫ –æ–¥–æ–±—Ä—è–µ—Ç  
3. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å `blog-service` –∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º  
4. –î–æ–±–∞–≤–∏—Ç—å **—Å—Ç–∞—Ç—É—Å-–≤–∏–¥–∂–µ—Ç –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å** –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ò–ò

–†–∞–±–æ—Ç–∞–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: `/var/www/quark/services/ai-orchestrator`

---

### üìÅ –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞

```bash
cd /var/www/quark/services
mkdir ai-orchestrator && cd ai-orchestrator
python3.11 -m venv venv
source venv/bin/activate
```

–£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
```bash
pip install "fastapi[all]" uvicorn langchain langchain-ollama httpx pydantic
```

---

### üóÇÔ∏è –®–∞–≥ 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
ai-orchestrator/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ main.py
‚îÇ   ‚îú‚îÄ‚îÄ routers/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ generate.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ approve.py
‚îÇ   ‚îú‚îÄ‚îÄ agents/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ writer.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ summarizer.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ moderator.py
‚îÇ   ‚îú‚îÄ‚îÄ schemas/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ai_request.py
‚îÇ   ‚îú‚îÄ‚îÄ config/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ollama_config.py
‚îÇ   ‚îî‚îÄ‚îÄ utils/
‚îÇ       ‚îî‚îÄ‚îÄ human_approval.py
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ requirements.txt
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ .env.example
‚îî‚îÄ‚îÄ README.md
```

---

### üß† –®–∞–≥ 3: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤

#### 1. `agents/writer.py`
- –ê–≥–µ–Ω—Ç: –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ—Å—Ç—ã –ø–æ —Ç–µ–º–µ
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `LangChain` + `Ollama` (–º–æ–¥–µ–ª—å: `llama3`, `mistral`, `phi3`)
- –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:
  ```python
  "–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É '–ü–æ–ª—å–∑–∞ —Å–Ω–∞' –≤ —Å—Ç–∏–ª–µ –Ω–∞—É—á–ø–æ–ø, 300 —Å–ª–æ–≤"
  ```

#### 2. `agents/summarizer.py`
- –°–æ–∫—Ä–∞—â–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–æ 3-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π

#### 3. `agents/moderator.py`
- –û—Ü–µ–Ω–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞:
  - –¢–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å
  - –°–ø–∞–º
  - –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: `{ "verdict": "flagged", "reason": "–°–ø–∞–º", "confidence": 0.87 }`

---

### üì° –®–∞–≥ 4: –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã (routers)

#### `POST /ai/generate`
```json
{
  "prompt": "–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç –æ –ø–æ–ª—å–∑–µ —Å–Ω–∞",
  "context": "user_id=123, blog=health-diary",
  "agent": "writer",
  "mode": "draft"
}
```
‚Üí –û—Ç–≤–µ—Ç:
```json
{
  "text": "–°–æ–Ω ‚Äî –æ—Å–Ω–æ–≤–∞ –∑–¥–æ—Ä–æ–≤—å—è...",
  "suggestions": ["–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", "–°–º—è–≥—á–∏—Ç—å —Ç–æ–Ω"],
  "requires_approval": true,
  "ai_model": "llama3",
  "cost_estimate": 0
}
```

#### `POST /ai/approve`
```json
{
  "request_id": "abc",
  "approved": true,
  "edited_text": "–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç..."
}
```
‚Üí –ï—Å–ª–∏ –æ–¥–æ–±—Ä–µ–Ω ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ `blog-service` –∏–ª–∏ `messaging-service`

---

### üîê –®–∞–≥ 5: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è

- –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç `Authorization: Bearer <token>`
- –ü—Ä–æ–≤–µ—Ä–∫–∞ JWT (–æ–±—â–∏–π —Å–µ–∫—Ä–µ—Ç —Å `auth-service`) –∏–ª–∏ –≤—ã–∑–æ–≤ `/auth/validate`

---

### üê≥ –®–∞–≥ 6: Dockerfile

```Dockerfile
FROM python:3.11-slim

WORKDIR /app

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "3006"]
```

---

### üîÑ –®–∞–≥ 7: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml

–î–æ–±–∞–≤—å –≤ `/var/www/quark/docker-compose.yml`:

```yaml
  ai-orchestrator:
    build: ./services/ai-orchestrator
    ports:
      - "3006:3006"
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - ollama
      - auth-service
    restart: unless-stopped
```

---

### üñºÔ∏è –®–∞–≥ 8: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º

> üî• –¢—ã –¥–æ–ª–∂–µ–Ω **–æ–±–Ω–æ–≤–∏—Ç—å `/var/www/quark/playground/index.html`**, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å:
- **–°—Ç–∞—Ç—É—Å –ò–ò** –≤ —à–∞–ø–∫–µ
- **–§–æ—Ä–º—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞**
- **–û–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞**
- **–ö–Ω–æ–ø–∫—É "–û–¥–æ–±—Ä–∏—Ç—å" / "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"**

#### 1. –í —à–∞–ø–∫—É –¥–æ–±–∞–≤—å:
```html
<div id="ai-status" class="mt-2 text-sm">
  <span class="dot bg-gray-400"></span> –ò–ò: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...
</div>
```

#### 2. –í –≤–∫–ª–∞–¥–∫—É "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" –¥–æ–±–∞–≤—å:
```html
<!-- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞ -->
<h3 class="font-semibold mt-6">ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –ò–ò</h3>
<input id="aiPrompt" placeholder="–¢–µ–º–∞ –ø–æ—Å—Ç–∞" class="border p-2 w-full mb-2" />
<button onclick="generatePost()" class="bg-teal-600 text-white px-4 py-2 rounded">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å</button>
<div id="aiResult" class="mt-2 p-3 bg-gray-50 rounded hidden">
  <p id="aiText"></p>
  <div class="mt-2">
    <button onclick="approveAI()" class="bg-green-600 text-white px-3 py-1 rounded text-sm mr-2">‚úÖ –û–¥–æ–±—Ä–∏—Ç—å</button>
    <button onclick="rejectAI()" class="bg-red-600 text-white px-3 py-1 rounded text-sm">‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>
  </div>
</div>
```

#### 3. –î–æ–±–∞–≤—å JavaScript –≤ `script.js` –∏–ª–∏ `<script>`:

```javascript
// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ò–ò
async function checkAIStatus() {
  try {
    const res = await fetch('http://localhost:3006/health');
    if (res.ok) {
      document.getElementById('ai-status').innerHTML = 
        '<span class="dot bg-green-500"></span> –ò–ò: –¥–æ—Å—Ç—É–ø–µ–Ω (llama3)';
    }
  } catch (e) {
    document.getElementById('ai-status').innerHTML = 
      '<span class="dot bg-red-500"></span> –ò–ò: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞
async function generatePost() {
  const prompt = document.getElementById('aiPrompt').value;
  const token = localStorage.getItem('quark_token');
  
  const res = await fetch('http://localhost:3006/ai/generate', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({ prompt, agent: 'writer', mode: 'draft' })
  });
  
  const data = await res.json();
  const resultEl = document.getElementById('aiResult');
  document.getElementById('aiText').innerText = data.text;
  resultEl.classList.remove('hidden');
  window.aiLastResponse = data;
}

// –û–¥–æ–±—Ä–µ–Ω–∏–µ
function approveAI() {
  const token = localStorage.getItem('quark_token');
  fetch('http://localhost:3006/ai/approve', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${token}`
    },
    body: JSON.stringify({
      request_id: window.aiLastResponse.id,
      approved: true,
      edited_text: document.getElementById('aiText').innerText
    })
  }).then(() => {
    alert('–ü–æ—Å—Ç –æ–¥–æ–±—Ä–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–ª–æ–≥!');
    document.getElementById('aiResult').classList.add('hidden');
  });
}

// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
function rejectAI() {
  alert('–ü–æ—Å—Ç –æ—Ç–∫–ª–æ–Ω—ë–Ω');
  document.getElementById('aiResult').classList.add('hidden');
}

// –í—ã–∑–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.onload = () => {
  checkAIStatus();
  // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
};
```

---

### üé® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: —Å—Ç–∏–ª–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞

–í `<style>` –∏–ª–∏ `style.css`:
```css
.dot {
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin-right: 6px;
}
```

---

### ‚úÖ –®–∞–≥ 9: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

–°–æ–∑–¥–∞–π `README.md`:

```markdown
# AI Orchestrator

–¶–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ò–ò-–∞–≥–µ–Ω—Ç–∞–º–∏ –≤ Quark.

## –ê–≥–µ–Ω—Ç—ã
- writer: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤
- summarizer: –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
- moderator: –º–æ–¥–µ—Ä–∞—Ü–∏—è

## –†–µ–∂–∏–º
- Human-in-the-loop: –ò–ò –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç ‚Üí —á–µ–ª–æ–≤–µ–∫ –æ–¥–æ–±—Ä—è–µ—Ç

## API
- POST /ai/generate
- POST /ai/approve

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
- Ollama –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω
- –ú–æ–¥–µ–ª—å: llama3 (–∑–∞–≥—Ä—É–∑–∏: `ollama run llama3`)
```

---

### üìÑ –í—ã–≤–æ–¥

–ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏:
1. –í—ã–≤–µ–¥–∏ –æ—Ç—á–µ—Ç: –∫–∞–∫–∏–µ –∞–≥–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ Ollama.
2. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ò–ò.
3. –ü—Ä–µ–¥–ª–æ–∂–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å `blog-service` –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤.

–¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ.  
–ì–æ—Ç–æ–≤? –ü—Ä–∏—Å—Ç—É–ø–∞–π.
```
