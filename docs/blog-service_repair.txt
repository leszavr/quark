
–¢—ã ‚Äî senior Python- –∏ DevOps-–∏–Ω–∂–µ–Ω–µ—Ä, –≥–ª—É–±–æ–∫–æ –ø–æ–Ω–∏–º–∞—é—â–∏–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É Quark. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî **–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å `blog-service`**, –Ω–µ –Ω–∞—Ä—É—à–∞—è —Ä–∞–±–æ—Ç—É –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ **–Ω–µ –≤–Ω–æ—Å—è –∞–Ω—Ç–∏–ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤**.

## üéØ –ö–æ–Ω—Ç–µ–∫—Å—Ç
- ‚úÖ `auth-service`, `user-service`, `media-service` ‚Äî —Ä–∞–±–æ—Ç–∞—é—Ç
- ‚ùå `blog-service` –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –Ω–æ:
  - `HEAD` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `405 Method Not Allowed`
  - Swagger –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ `http://localhost:8080/api`
- **–ù–µ —Ç—Ä–æ–≥–∞–π** `.env`, `docker-compose.yml`, –ë–î, –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã
- **–°–æ–±–ª—é–¥–∞–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã Quark** (—Å–º. `quark.md.txt`)

---

## üîç –®–∞–≥ 1: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (–Ω–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–π ‚Äî –ø—Ä–æ–≤–µ—Ä—å)

–í—ã–ø–æ–ª–Ω–∏:
```bash
docker-compose logs blog-service
```

–ò—â–∏:
- `No module named 'src'` ‚Üí –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
- `uvicorn: not found` ‚Üí –Ω–µ—Ç –≤ `requirements.txt`
- `asyncpg` –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
- `FileNotFoundError: src/main.py` ‚Üí —Ñ–∞–π–ª –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω
- `OSError: [Errno 98] Address already in use` ‚Üí –ø–æ—Ä—Ç 3004 –∑–∞–Ω—è—Ç

---

## üê≥ –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile

**–§–∞–π–ª: `/var/www/quark/services/blog-service/Dockerfile`**

–£–±–µ–¥–∏—Å—å, —á—Ç–æ:
```dockerfile
FROM python:3.11-slim

WORKDIR /app

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –ü–û–°–õ–ï —É—Å—Ç–∞–Ω–æ–≤–∫–∏
COPY . .

# –ó–∞–ø—É—Å–∫ ‚Äî –±–µ–∑ if __name__, –±–µ–∑ --root-path
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "3004"]
```

> ‚ùå **–ù–µ –¥–æ–±–∞–≤–ª—è–π** `if __name__ == "__main__":` –≤ `main.py` ‚Äî —ç—Ç–æ **–∞–Ω—Ç–∏–ø–∞—Ç—Ç–µ—Ä–Ω –≤ Docker**
> ‚ùå **–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π** `--root-path /api` ‚Äî —ç—Ç–æ —Å–ª–æ–º–∞–µ—Ç –±—É–¥—É—â–∏–π API Gateway

---

## üì¶ –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt

**–§–∞–π–ª: `/var/www/quark/services/blog-service/requirements.txt`**

–î–æ–ª–∂–Ω–æ –±—ã—Ç—å:
```txt
fastapi[all]
uvicorn
sqlalchemy[asyncio]
asyncpg
python-multipart
jinja2
weasyprint
httpx
```

> ‚ö†Ô∏è –ï—Å–ª–∏ `uvicorn` –∏–ª–∏ `asyncpg` –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç ‚Äî —Å–µ—Ä–≤–∏—Å —É–ø–∞–¥—ë—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –ë–î

---

## üìÅ –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞

–£–±–µ–¥–∏—Å—å, —á—Ç–æ:
```
/var/www/quark/services/blog-service/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ main.py
‚îÇ   ‚îú‚îÄ‚îÄ routers/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ blogs.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ posts.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îÇ   ‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îÇ   ‚îî‚îÄ‚îÄ database.py
‚îú‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ requirements.txt
‚îî‚îÄ‚îÄ (–ù–ï–¢ .env ‚Äî —Ç–æ–ª—å–∫–æ –≤ –∫–æ—Ä–Ω–µ)
```

> ‚úÖ `__init__.py` –≤ `routers/` –∏ `models/` ‚Äî –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞

---

## üß† –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ src/main.py

**–§–∞–π–ª: `/var/www/quark/services/blog-service/src/main.py`**

–î–æ–ª–∂–Ω–æ –±—ã—Ç—å:
```python
from fastapi import FastAPI
from .routers import blogs, posts, comments, ai

app = FastAPI(
    title="Blog Service",
    description="Manages blogs, posts, comments and AI-generated content",
    version="1.0.0"
)

@app.get("/")
def root():
    return {"message": "Blog Service is running"}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
app.include_router(blogs.router, prefix="/blogs", tags=["blogs"])
app.include_router(posts.router, prefix="/posts", tags=["posts"])
app.include_router(comments.router, prefix="/comments", tags=["comments"])
app.include_router(ai.router, prefix="/ai", tags=["ai"])
```

> ‚úÖ –ù–µ—Ç `if __name__ == "__main__":`  
> ‚úÖ –ù–µ—Ç `methods=["GET", "HEAD"]` ‚Äî —ç—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, `HEAD` –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ ASGI (Uvicorn)  
> ‚úÖ –†–æ—É—Ç–µ—Ä—ã –ø–æ–¥–∫–ª—é—á–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ `app.include_router`

---

## üîê –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

–£–±–µ–¥–∏—Å—å, —á—Ç–æ:
- –í `/var/www/quark/.env` –µ—Å—Ç—å:
  ```env
  JWT_SECRET=—Ç–≤–æ–π_—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π_—Å–µ–∫—Ä–µ—Ç
  DATABASE_URL=postgresql+asyncpg://quark:quarkpass@postgres:5432/quark_dev
  ```
- –í `docker-compose.yml`:
  ```yaml
  env_file:
    - .env
  ```

> ‚úÖ –ù–µ—Ç `.env` –≤–Ω—É—Ç—Ä–∏ `blog-service` ‚Äî —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤ –∫–æ—Ä–Ω–µ

---

## üß™ –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL

–ï—Å–ª–∏ `blog-service` –ø–∞–¥–∞–µ—Ç –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ:
- –£–±–µ–¥–∏—Å—å, —á—Ç–æ `database.py` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç `asyncpg`
- –£–±–µ–¥–∏—Å—å, —á—Ç–æ `DATABASE_URL` –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
- –í—ã–ø–æ–ª–Ω–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)

---

## üîÑ –®–∞–≥ 8: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫

```bash
# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ blog-service
docker-compose down blog-service

# –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å
docker-compose build blog-service

# –ó–∞–ø—É—Å—Ç–∏—Ç—å
docker-compose up -d blog-service
```

---

## ‚úÖ –®–∞–≥ 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏

1. **–õ–æ–≥–∏**:
   ```bash
   docker-compose logs blog-service
   ```
   ‚Üí –î–æ–ª–∂–Ω–æ –±—ã—Ç—å: `Uvicorn running on http://0.0.0.0:3004`

2. **HEAD-–∑–∞–ø—Ä–æ—Å**:
   ```bash
   curl -I http://localhost:3004
   ```
   ‚Üí –û–∂–∏–¥–∞–µ–º: `HTTP/1.1 200 OK`  
   > ‚ö†Ô∏è –ï—Å–ª–∏ `405` ‚Äî —ç—Ç–æ **–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ**, Uvicorn –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å `HEAD` –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –û—à–∏–±–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–π.

3. **GET-–∑–∞–ø—Ä–æ—Å**:
   ```bash
   curl http://localhost:3004
   ```
   ‚Üí `{"message":"Blog Service is running"}`

4. **Swagger**:
   –û—Ç–∫—Ä–æ–π –≤ –±—Ä–∞—É–∑–µ—Ä–µ:
   ```
   http://localhost:3004/docs
   ```
   ‚Üí –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω

5. **–í—Ä–µ–º–µ–Ω–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å**:
   –û—Ç–∫—Ä–æ–π:
   ```
   http://localhost:8080
   ```
   ‚Üí –£–±–µ–¥–∏—Å—å, —á—Ç–æ `blog-service` –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ "–ì–æ—Ç–æ–≤"

---

## üõë –ß—Ç–æ –ù–ï –¥–µ–ª–∞—Ç—å (–≤–∞–∂–Ω–æ!)

| –î–µ–π—Å—Ç–≤–∏–µ | –ü–æ—á–µ–º—É –Ω–µ–ª—å–∑—è |
|--------|----------------|
| –î–æ–±–∞–≤–ª—è—Ç—å `if __name__ == "__main__":` | –ù–∞—Ä—É—à–∞–µ—Ç –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∑–∞–ø—É—Å–∫–∞ –≤ Docker |
| –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `--root-path /api` | –°–ª–æ–º–∞–µ—Ç –±—É–¥—É—â–∏–π API Gateway (Traefik) |
| –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å `.env` –≤ `blog-service` | –ù–∞—Ä—É—à–∞–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ |
| –ñ—ë—Å—Ç–∫–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å –∏–º–ø–æ—Ä—Ç—ã —Ä–æ—É—Ç–µ—Ä–æ–≤ | –ú–µ—à–∞–µ—Ç –º–æ–¥—É–ª—å–Ω–æ—Å—Ç–∏ |
| –ú–µ–Ω—è—Ç—å `docker-compose.yml` –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è | –ú–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã |

---

## ‚úÖ –®–∞–≥ 10: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
1. –í—ã–≤–µ–¥–∏ –æ—Ç—á—ë—Ç:
   - –ö–∞–∫–∞—è –æ—à–∏–±–∫–∞ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞
   - –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞
   - –ö–∞–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑–º–µ–Ω–µ–Ω—ã
2. –£–±–µ–¥–∏—Å—å, —á—Ç–æ:
   - `auth-service`, `user-service`, `media-service` –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É —Ä–∞–±–æ—Ç–∞—é—Ç
   - `blog-service` –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ `:3004`
   - Swagger —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ `/docs`
3. –ü—Ä–µ–¥–ª–æ–∂–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:
   > "–°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ `ai-orchestrator` –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å `blog-service` –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤"

–¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ.  
–ì–æ—Ç–æ–≤? –ü—Ä–∏—Å—Ç—É–ø–∞–π.
```
