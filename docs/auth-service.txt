### **"–°–æ–∑–¥–∞–π –∏ –Ω–∞—Å—Ç—Ä–æ–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å auth-service –Ω–∞ NestJS –¥–ª—è Quark"**

```text
–¢—ã ‚Äî senior full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å `auth-service` –Ω–∞ **NestJS (TypeScript)** –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ Quark.

–¶–µ–ª—å: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞–¥–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π JWT, OAuth2 (Google, GitHub), –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.

–†–∞–±–æ—Ç–∞–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: `/var/www/quark/services/auth-service`

---

### üìÅ –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞

1. –ü–µ—Ä–µ–π–¥–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥:
   ```bash
   cd /var/www/quark/services
   mkdir auth-service && cd auth-service
   ```

2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π NestJS –ø—Ä–æ–µ–∫—Ç:
   ```bash
   npm create nest@latest . --package-manager=npm --strict=false --skip-git
   ```
   –ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:
   - ? What name would you like to use? ‚Üí `auth-service`
   - ? Which bundler would you like to use? ‚Üí `webpack`
   - ? Which package manager would you like to use? ‚Üí `npm`
   - ? Would you like to generate a Dockerfile? ‚Üí `Yes`
   - ? Would you like to generate a README? ‚Üí `Yes`

3. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞:
   - `src/`, `test/`, `package.json`, `nest-cli.json`, `Dockerfile`

---

### üì¶ –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

–£—Å—Ç–∞–Ω–æ–≤–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã:
```bash
npm install \
  @nestjs/jwt \
  @nestjs/passport \
  @nestjs/typeorm \
  typeorm \
  pg \
  passport \
  passport-jwt \
  passport-google-oauth20 \
  passport-github2 \
  bcrypt \
  class-validator \
  class-transformer \
  joi \
  @types/bcrypt \
  @types/passport-jwt \
  @types/passport-google-oauth20 \
  @types/passport-github2 \
  --save

npm install \
  @nestjs/swagger \
  swagger-ui-express \
  --save
```

---

### üóÇÔ∏è –®–∞–≥ 3: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

–°–æ–∑–¥–∞–π —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É:

```
src/
‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îú‚îÄ‚îÄ auth.controller.ts
‚îÇ   ‚îú‚îÄ‚îÄ auth.service.ts
‚îÇ   ‚îú‚îÄ‚îÄ auth.module.ts
‚îÇ   ‚îî‚îÄ‚îÄ strategies/
‚îÇ       ‚îú‚îÄ‚îÄ jwt.strategy.ts
‚îÇ       ‚îú‚îÄ‚îÄ google.strategy.ts
‚îÇ       ‚îî‚îÄ‚îÄ github.strategy.ts
‚îú‚îÄ‚îÄ users/
‚îÇ   ‚îú‚îÄ‚îÄ user.entity.ts
‚îÇ   ‚îú‚îÄ‚îÄ user.repository.ts (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ —á–µ—Ä–µ–∑ TypeORM —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)
‚îú‚îÄ‚îÄ common/
‚îÇ   ‚îú‚îÄ‚îÄ decorators/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ current-user.decorator.ts
‚îÇ   ‚îî‚îÄ‚îÄ guards/
‚îÇ       ‚îî‚îÄ‚îÄ jwt-auth.guard.ts
‚îú‚îÄ‚îÄ config/
‚îÇ   ‚îî‚îÄ‚îÄ auth.config.ts
‚îú‚îÄ‚îÄ dto/
‚îÇ   ‚îú‚îÄ‚îÄ register.dto.ts
‚îÇ   ‚îú‚îÄ‚îÄ login.dto.ts
‚îÇ   ‚îî‚îÄ‚îÄ token.dto.ts
‚îú‚îÄ‚îÄ validators/
‚îÇ   ‚îî‚îÄ‚îÄ password.validator.ts
‚îî‚îÄ‚îÄ main.ts (—É–∂–µ –µ—Å—Ç—å)
```

---

### üìÑ –®–∞–≥ 4: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

#### 1. `user.entity.ts`
–°–æ–∑–¥–∞–π —Å—É—â–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
- `id`, `email` (unique), `passwordHash`, `username` (unique), `createdAt`, `updatedAt`
- –ò—Å–ø–æ–ª—å–∑—É–π `@Entity`, `@PrimaryGeneratedColumn`, `@Column`

#### 2. `register.dto.ts`
```ts
class RegisterDto {
  @IsEmail()
  email: string;

  @IsString()
  @MinLength(3)
  username: string;

  @IsString()
  @MinLength(8)
  @Validate(PasswordValidator)
  password: string;
}
```

#### 3. `auth.service.ts`
–ú–µ—Ç–æ–¥—ã:
- `register(registerDto)` ‚Üí —Ö—ç—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- `validateUser(email, password)` ‚Üí –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∞—Ä–æ–ª—å
- `login(user)` ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `{ access_token }` (JWT)
- `googleLogin(req)` ‚Üí –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç OAuth2 Google
- `githubLogin(req)` ‚Üí –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç OAuth2 GitHub

#### 4. `jwt.strategy.ts`
- –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–æ–∫–µ–Ω –∏–∑ `Authorization: Bearer <token>`
- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å—å JWT
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ `sub` (user.id)

#### 5. `auth.controller.ts`
–≠–Ω–¥–ø–æ–∏–Ω—Ç—ã:
- `POST /auth/register` ‚Üí —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
- `POST /auth/login` ‚Üí –≤—Ö–æ–¥
- `POST /auth/refresh` ‚Üí –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
- `GET /auth/google` ‚Üí redirect to Google
- `GET /auth/google/callback` ‚Üí –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
- `GET /auth/github` ‚Üí redirect to GitHub
- `GET /auth/github/callback` ‚Üí –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
- `GET /auth/profile` ‚Üí –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç (—Ç—Ä–µ–±—É–µ—Ç JWT)

#### 6. `main.ts`
- –í–∫–ª—é—á–∏ CORS
- –ù–∞—Å—Ç—Ä–æ–π Swagger:
  ```ts
  const config = new DocumentBuilder()
    .setTitle('Auth Service')
    .setDescription('API for authentication and user management')
    .setVersion('1.0')
    .addBearerAuth()
    .build();
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);
  ```

---

### üîê –®–∞–≥ 5: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

–°–æ–∑–¥–∞–π `.env` –≤ `/var/www/quark/services/auth-service`:
```env
PORT=3001

# JWT
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRES_IN=3600

# OAuth2
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=http://localhost:3001/auth/google/callback

GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_CALLBACK_URL=http://localhost:3001/auth/github/callback

# Database
DATABASE_HOST=postgres
DATABASE_PORT=5432
DATABASE_USER=quark
DATABASE_PASSWORD=quarkpass
DATABASE_NAME=quark_dev
```

–°–æ–∑–¥–∞–π `.env.example` —Å —Ç–µ–º–∏ –∂–µ –∫–ª—é—á–∞–º–∏, –Ω–æ –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π.

---

### üê≥ –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Dockerfile

–£–±–µ–¥–∏—Å—å, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π `Dockerfile`:
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç multi-stage build
- –ö–æ–ø–∏—Ä—É–µ—Ç `package.json` –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç—É 3001
- –ö–æ–ø–∏—Ä—É–µ—Ç `.env` (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ ‚Äî —á–µ—Ä–µ–∑ —Å–µ–∫—Ä–µ—Ç—ã)

–î–æ–±–∞–≤—å –≤ `docker-compose.yml` —Å–µ—Ä–≤–∏—Å:

```yaml
  auth-service:
    build: ./services/auth-service
    ports:
      - "3001:3001"
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_USER=quark
      - DATABASE_PASSWORD=quarkpass
      - DATABASE_NAME=quark_dev
      - JWT_SECRET=${JWT_SECRET:-default-super-secret}
    depends_on:
      - postgres
    restart: unless-stopped
```

---

### üß™ –®–∞–≥ 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

1. –ó–∞–ø—É—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å:
   ```bash
   cd /var/www/quark/services/auth-service
   npm run start
   ```

2. –û—Ç–∫—Ä–æ–π Swagger: `http://localhost:3001/api`
3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π:
   - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   - –í—Ö–æ–¥ ‚Üí –ø–æ–ª—É—á–µ–Ω–∏–µ JWT
   - –î–æ—Å—Ç—É–ø –∫ `/auth/profile` —Å —Ç–æ–∫–µ–Ω–æ–º
   - –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ ‚Üí 401

4. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ PostgreSQL.

---

### ‚úÖ –®–∞–≥ 8: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

–°–æ–∑–¥–∞–π —Ñ–∞–π–ª `README.md` –≤ `auth-service/`:

```markdown
# Auth Service

–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è Quark.

## –§—É–Ω–∫—Ü–∏–∏
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥
- JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
- OAuth2: Google, GitHub
- –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
- Swagger API

## –ó–∞–ø—É—Å–∫
```bash
npm run start
```

## API
–î–æ—Å—Ç—É–ø–Ω–æ –ø–æ `/api` (Swagger)

## –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
–°–º. `.env.example`
```

---

### üìÑ –í—ã–≤–æ–¥

–ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏:
1. –í—ã–≤–µ–¥–∏ –æ—Ç—á–µ—Ç: —á—Ç–æ —Å–æ–∑–¥–∞–Ω–æ, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏.
2. –ü—Ä–µ–¥–ª–æ–∂–∏ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ `user-service` –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API Gateway.

–¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ.  
–ì–æ—Ç–æ–≤? –ü—Ä–∏—Å—Ç—É–ø–∞–π.
```


